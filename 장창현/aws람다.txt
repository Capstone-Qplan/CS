-aws lambda란, aws lambda를 통한 기본 예제 실습-

aws lambda 는 함수로써
일단 웹에서 어떤 로그가 발생했을때나 클라이언트의 요청에 의해 동작하는 함수이다.

이 함수의 결과를 DB나 혹은 자체 aws로그로 저장할 수 있다.
람다가 어떤 데이터를 처리한뒤 데이터에 대한 내역들을 저장하거나 관리 할 수 있음.
aws를 이용하는 사람들은 유용하게 사용

이전까지는 어떤 웹서버를 동작하고자한다면 어떤 서버인스턴스가 필요하고
톰캣과 같은 서버를 구동시켜 우리가 작성한 서버프로그램이 그 웹서버 위에서 돌게끔하는
것이 일반적이다. 

근데 이러한 작업이 람다를 이용하면 필요가 없어짐.
그저 소스코드만 작성하고 몇가지 설정만하면 우리만의 웹서버를 만들 수 잇음.


어떠한 클라이언트의 요청-> API 게이트 웨이-> AWS 람다
AWS람다에서 결과를 DB에 담거나 결과를 반환할 수 있음.

AWS 람다는 함수로서의 역할을 수행하기 때문에 서버처럼 동작하기 위해서는 
API게이트웨이라는것을 통해 클라이언트가 공인주소로 접속할 수 있도록 해줘야한다.

람다는 서버리스 플랫폼으로써  별도의 서버를 구축하지않아도 서버의 기능을 온전히 이용

1. Create function을 통해 하나의 람다 함수를 작성할 수 있다.
이때 lambda의 언어로는 주로 파이썬 또는 node.js를 사용 .
2. 함수 이름을 작성하고
3. runtime을 통해 lambda에서 사용할 언어를 선택한다.
4. 권한설정하는데 기본 람다 권한 설정

람다는 사용하는 만큼 요금이 부과되는데 사용량이 적을때는 사실상 무료. 
aws를사용하는 사람은 거의 공짜로 공부가능.

람다함수는 어떤 조건에 의해 작동하는데 이때 조건이 '트리거'이다.
그다음 옆에 대상 '추가'에는 DB, awslog등 '저장'을 의미한다. 
(저는 이부분에서 다시 우리앱으로반환하는 것이 있으면 될거같아요!)

람다는 다양한 코드 작성후 어떤 코드가 메인 코드가 될지 작성할 수 있다.
처음 생성된 lamda_function.py파일을 살펴보면
lambda_handler라는 함수가 있는데 이때 파라미터로 (event,context)가 있다.
이때 event는 클라이언트의 활동을 의미하는데 이것은 위의 '트리거'에 의해 값이 저장된다.
여기서 트리거에 'API Gateway'를 추가한다. 일종의 웹서버처럼 동작하는 기능.
이를 수행하면 아래에 'create new api'등이 나온다.
일단 여기서 나머지를 rest, open으로 한다음 추가를 하면 알아서 주소가 설정된다.
'api endpoin'는 우리가 만든 람다 서버의 주소를 의미한다.
이를 열어보면 웹사이트에 위쪽 소스코드에 넣어놨던 문장이 출력된다.


-aws를 이용한 특정 웹사이트에 크롤링 하여 우리에게 반환하는 예제-
우리는 일반적으로 파이썬의 다양한 라이브러리를 이용해 프로그램을 작성하는데
awslamda는 하나의 파이썬 함수를 만들었을 때 기본적인 라이브러리와 
aws관련 라이브러리만을 제공
그래서 머신러닝이나 크롤링등을 이용하기 위해선 추가적인 라이브러리를 이용하므로 
별도의 작업이 필요하다. 
추가적인 라이브러리를 통째로 압축해 lamda에 업로드 하여 적용할 수 있다.
이렇게 lamda함수에 필요한 라이브러리가 있을때 그것을 직접 등록해 이용할 수 있다.

1. 별도의 폴더를 만든다.
2.cmd를 실행후 해당 폴더의 경로로 이동한다. ('D: '명령을 통해 D드라이브로 이동가능).
(cd 파일경로)
3. 다음 'pip3 install bs4 -t .' 명령을 통해 해당 폴더에 bs4가 폴더형태로 설치된다.
4. 'zip -r bs4.zip .' 명령을 통해 하나의 파일로 압축한다.

aws lambda로 돌아와 '코드'태그의 '에서 업로드'를 통해 '.zip 파일'을 선택하면됌
여기서 업로드시 모든 파일이 삭제되는데 영상과 내 aws의 모습이 달라서
해결방법을 설명해주는데 따라하지못하겠음. 단 영어 버젼으로 바꾸는 법 찾아보면됌
이거 이용하면 충분히 우리 버튼 눌렸을때, 결과 반환 할 수 있을거 같음.